"""
Django settings for BISK_RFv3 project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

# # Make Django use localtime when rendering datetimes in templates (including admin)
# from django.utils.timezone import activate
# import pytz
# # Optional: manually activate it if you log in or use middleware
# activate(pytz.timezone("Asia/Baghdad"))

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$nrs8hfz!_s@23(3oy@3vpmg*tp_+jn3g^3g-iivb@cg=2#+s^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'attendance.apps.AttendanceConfig',
    'import_export',
    'multiselectfield',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'django.middleware.timezone.TimeZoneMiddleware',

]

ROOT_URLCONF = 'BISK_RFv3.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BISK_RFv3.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'bisk_rfv3_1',
        'USER': 'bisk',
        'PASSWORD': 'Diagonal1!DB',  # <<< replace with your real password
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'sqlite3': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Baghdad'
# TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# utils.py settings
# Enable or disable deleting old cropped images (in case of Recognition then Update the AttendanceLog)
# DELETE_OLD_CROPPED_IMAGE = False
# Enable or disable saving all cropped faces (including unmatched ones)
# SAVE_ALL_CROPPED_FACES = True


# === ⚙️ Face Recognition Attendance Settings ===

# When True, save **all detected cropped face images**, even unmatched ones,
# into: media/logs/debug_faces/<camera_name>/
# This helps for debugging and reviewing missed detections.
SAVE_ALL_CROPPED_FACES = True

# When True, save the recognized (matched) student's cropped face
# into the AttendanceLog.cropped_face field (ImageField).
# These are stored in: media/attendance_crops/YYYY/MM/DD/
SAVE_CROPPED_IMAGE = True

# When True, if an existing AttendanceLog entry already has a cropped image,
# it will be deleted and replaced by the new (better match) one.
# If False, the old image will remain untouched.
DELETE_OLD_CROPPED_IMAGE = True
